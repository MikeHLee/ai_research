{
  "read_file": {
    "name": "read_file",
    "description": "Reads a file at the specified path. Returns file contents with line numbers.",
    "parameters": {
      "type": "object",
      "properties": {
        "file_path": {
          "type": "string",
          "description": "The absolute path to the file to read"
        },
        "offset": {
          "type": "integer",
          "description": "The 1-indexed line number to start reading from (optional)"
        },
        "limit": {
          "type": "integer",
          "description": "The number of lines to read (optional)"
        }
      },
      "required": ["file_path"]
    }
  },
  "grep_search": {
    "name": "grep_search",
    "description": "Search for text patterns in files using ripgrep. Supports regex and glob filtering.",
    "parameters": {
      "type": "object",
      "properties": {
        "Query": {
          "type": "string",
          "description": "The search term or pattern to look for"
        },
        "SearchPath": {
          "type": "string",
          "description": "The path to search (directory or file)"
        },
        "IsRegex": {
          "type": "boolean",
          "description": "If true, treats Query as regex pattern"
        },
        "CaseInsensitive": {
          "type": "boolean",
          "description": "If true, performs case-insensitive search"
        },
        "Includes": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Glob patterns to filter files (e.g., '*.py')"
        },
        "MatchPerLine": {
          "type": "boolean",
          "description": "Show surrounding content with matches"
        }
      },
      "required": ["Query", "SearchPath"]
    }
  },
  "find_by_name": {
    "name": "find_by_name",
    "description": "Search for files and directories by name using glob patterns.",
    "parameters": {
      "type": "object",
      "properties": {
        "SearchDirectory": {
          "type": "string",
          "description": "The directory to search within"
        },
        "Pattern": {
          "type": "string",
          "description": "Glob pattern to search for (e.g., '*.ts')"
        },
        "Type": {
          "type": "string",
          "enum": ["file", "directory", "any"],
          "description": "Type filter for results"
        },
        "Extensions": {
          "type": "array",
          "items": {"type": "string"},
          "description": "File extensions to include (without leading dot)"
        },
        "MaxDepth": {
          "type": "integer",
          "description": "Maximum depth to search"
        }
      },
      "required": ["SearchDirectory"]
    }
  },
  "list_dir": {
    "name": "list_dir",
    "description": "Lists files and directories in a given path with sizes and item counts.",
    "parameters": {
      "type": "object",
      "properties": {
        "DirectoryPath": {
          "type": "string",
          "description": "The absolute path to the directory to list"
        }
      },
      "required": ["DirectoryPath"]
    }
  },
  "write_to_file": {
    "name": "write_to_file",
    "description": "Create a new file with the specified content. Creates parent directories if needed.",
    "parameters": {
      "type": "object",
      "properties": {
        "TargetFile": {
          "type": "string",
          "description": "The absolute path to the file to create"
        },
        "CodeContent": {
          "type": "string",
          "description": "The code contents to write to the file"
        },
        "EmptyFile": {
          "type": "boolean",
          "description": "Set to true to create an empty file"
        }
      },
      "required": ["TargetFile"]
    }
  },
  "edit": {
    "name": "edit",
    "description": "Performs exact string replacement in a file. Must read file first.",
    "parameters": {
      "type": "object",
      "properties": {
        "file_path": {
          "type": "string",
          "description": "The absolute path to the file to modify"
        },
        "old_string": {
          "type": "string",
          "description": "The exact text to replace (must be unique)"
        },
        "new_string": {
          "type": "string",
          "description": "The replacement text"
        },
        "replace_all": {
          "type": "boolean",
          "description": "Replace all occurrences (default false)"
        },
        "explanation": {
          "type": "string",
          "description": "Description of the change being made"
        }
      },
      "required": ["file_path", "old_string", "new_string", "explanation"]
    }
  },
  "run_command": {
    "name": "run_command",
    "description": "Propose a command to run in the terminal. User must approve unless SafeToAutoRun is true.",
    "parameters": {
      "type": "object",
      "properties": {
        "CommandLine": {
          "type": "string",
          "description": "The exact command to execute"
        },
        "Cwd": {
          "type": "string",
          "description": "The working directory for the command"
        },
        "Blocking": {
          "type": "boolean",
          "description": "If true, wait for command to complete"
        },
        "SafeToAutoRun": {
          "type": "boolean",
          "description": "Set to true only if command has no destructive side-effects"
        }
      },
      "required": ["CommandLine", "Cwd"]
    }
  },
  "search_web": {
    "name": "search_web",
    "description": "Performs a web search and returns relevant documents.",
    "parameters": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "description": "The search query"
        },
        "domain": {
          "type": "string",
          "description": "Optional domain to prioritize in search"
        }
      },
      "required": ["query"]
    }
  },
  "read_url_content": {
    "name": "read_url_content",
    "description": "Read content from a URL. Must be HTTP or HTTPS.",
    "parameters": {
      "type": "object",
      "properties": {
        "Url": {
          "type": "string",
          "description": "The URL to read content from"
        }
      },
      "required": ["Url"]
    }
  },
  "find_code_context": {
    "name": "find_code_context",
    "description": "Search subagent that explores codebase based on natural language query.",
    "parameters": {
      "type": "object",
      "properties": {
        "search_term": {
          "type": "string",
          "description": "Natural language description of what to find"
        },
        "search_folder_absolute_uri": {
          "type": "string",
          "description": "Absolute path to folder to search in"
        }
      },
      "required": ["search_term", "search_folder_absolute_uri"]
    }
  },
  "create_memory": {
    "name": "create_memory",
    "description": "Save important context to memory database for future reference.",
    "parameters": {
      "type": "object",
      "properties": {
        "Action": {
          "type": "string",
          "enum": ["create", "update", "delete"],
          "description": "The type of action to take"
        },
        "Title": {
          "type": "string",
          "description": "Descriptive title for the memory"
        },
        "Content": {
          "type": "string",
          "description": "Content of the memory"
        },
        "Tags": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Tags to associate with memory (snake_case)"
        },
        "CorpusNames": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Workspace corpus names to associate with"
        }
      },
      "required": ["Action"]
    }
  }
}
